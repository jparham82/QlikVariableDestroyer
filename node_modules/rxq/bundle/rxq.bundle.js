(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["RxQ"] = factory();
	else
		root["RxQ"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 82);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(8);
var IE8_DOM_DEFINE = __webpack_require__(32);
var toPrimitive = __webpack_require__(19);
var dP = Object.defineProperty;

exports.f = __webpack_require__(2) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(10)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 3 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(72);
var defined = __webpack_require__(71);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(16)('wks');
var uid = __webpack_require__(6);
var Symbol = __webpack_require__(0).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 9 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.3' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 11 */
/***/ (function(module, exports) {

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/*!
 * https://github.com/Starcounter-Jack/JSON-Patch
 * (c) 2017 Joachim Wester
 * MIT license
 */
var _hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwnProperty(obj, key) {
    return _hasOwnProperty.call(obj, key);
}
exports.hasOwnProperty = hasOwnProperty;
function _objectKeys(obj) {
    if (Array.isArray(obj)) {
        var keys = new Array(obj.length);
        for (var k = 0; k < keys.length; k++) {
            keys[k] = "" + k;
        }
        return keys;
    }
    if (Object.keys) {
        return Object.keys(obj);
    }
    var keys = [];
    for (var i in obj) {
        if (hasOwnProperty(obj, i)) {
            keys.push(i);
        }
    }
    return keys;
}
exports._objectKeys = _objectKeys;
;
/**
* Deeply clone the object.
* https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)
* @param  {any} obj value to clone
* @return {any} cloned obj
*/
function _deepClone(obj) {
    switch (typeof obj) {
        case "object":
            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5
        case "undefined":
            return null; //this is how JSON.stringify behaves for array items
        default:
            return obj; //no need to clone primitives
    }
}
exports._deepClone = _deepClone;
//3x faster than cached /^\d+$/.test(str)
function isInteger(str) {
    var i = 0;
    var len = str.length;
    var charCode;
    while (i < len) {
        charCode = str.charCodeAt(i);
        if (charCode >= 48 && charCode <= 57) {
            i++;
            continue;
        }
        return false;
    }
    return true;
}
exports.isInteger = isInteger;
/**
* Escapes a json pointer path
* @param path The raw pointer
* @return the Escaped path
*/
function escapePathComponent(path) {
    if (path.indexOf('/') === -1 && path.indexOf('~') === -1)
        return path;
    return path.replace(/~/g, '~0').replace(/\//g, '~1');
}
exports.escapePathComponent = escapePathComponent;
/**
 * Unescapes a json pointer path
 * @param path The escaped pointer
 * @return The unescaped path
 */
function unescapePathComponent(path) {
    return path.replace(/~1/g, '/').replace(/~0/g, '~');
}
exports.unescapePathComponent = unescapePathComponent;
function _getPathRecursive(root, obj) {
    var found;
    for (var key in root) {
        if (hasOwnProperty(root, key)) {
            if (root[key] === obj) {
                return escapePathComponent(key) + '/';
            }
            else if (typeof root[key] === 'object') {
                found = _getPathRecursive(root[key], obj);
                if (found != '') {
                    return escapePathComponent(key) + '/' + found;
                }
            }
        }
    }
    return '';
}
exports._getPathRecursive = _getPathRecursive;
function getPath(root, obj) {
    if (root === obj) {
        return '/';
    }
    var path = _getPathRecursive(root, obj);
    if (path === '') {
        throw new Error("Object not found in root");
    }
    return '/' + path;
}
exports.getPath = getPath;
/**
* Recursively checks whether an object has any undefined values inside.
*/
function hasUndefined(obj) {
    if (obj === undefined) {
        return true;
    }
    if (obj) {
        if (Array.isArray(obj)) {
            for (var i = 0, len = obj.length; i < len; i++) {
                if (hasUndefined(obj[i])) {
                    return true;
                }
            }
        }
        else if (typeof obj === "object") {
            var objKeys = _objectKeys(obj);
            var objKeysLength = objKeys.length;
            for (var i = 0; i < objKeysLength; i++) {
                if (hasUndefined(obj[objKeys[i]])) {
                    return true;
                }
            }
        }
    }
    return false;
}
exports.hasUndefined = hasUndefined;
var PatchError = (function (_super) {
    __extends(PatchError, _super);
    function PatchError(message, name, index, operation, tree) {
        _super.call(this, message);
        this.message = message;
        this.name = name;
        this.index = index;
        this.operation = operation;
        this.tree = tree;
    }
    return PatchError;
}(Error));
exports.PatchError = PatchError;


/***/ }),
/* 12 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 13 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 14 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(28);
var enumBugKeys = __webpack_require__(13);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(0);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(0);
var hide = __webpack_require__(20);
var has = __webpack_require__(3);
var SRC = __webpack_require__(6)('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(9).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(7);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(1);
var createDesc = __webpack_require__(18);
module.exports = __webpack_require__(2) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var switchMap = rxjs.operators.switchMap;
var _rxjs = rxjs,
    throwError = _rxjs.throwError;


var qAsk = function qAsk(methodname) {
  for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }

  return function (handle$) {
    return handle$.pipe(switchMap(function (handle) {
      return handle.ask.apply(handle, [methodname].concat(params));
    }));
  };
};

exports.default = qAsk;
module.exports = exports["default"];

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var equalsOptions = { strict: true };
var _equals = __webpack_require__(23);
var areEquals = function (a, b) {
    return _equals(a, b, equalsOptions);
};
var helpers_1 = __webpack_require__(11);
exports.JsonPatchError = helpers_1.PatchError;
exports.deepClone = helpers_1._deepClone;
/* We use a Javascript hash to store each
 function. Each hash entry (property) uses
 the operation identifiers specified in rfc6902.
 In this way, we can map each patch operation
 to its dedicated function in efficient way.
 */
/* The operations applicable to an object */
var objOps = {
    add: function (obj, key, document) {
        obj[key] = this.value;
        return { newDocument: document };
    },
    remove: function (obj, key, document) {
        var removed = obj[key];
        delete obj[key];
        return { newDocument: document, removed: removed };
    },
    replace: function (obj, key, document) {
        var removed = obj[key];
        obj[key] = this.value;
        return { newDocument: document, removed: removed };
    },
    move: function (obj, key, document) {
        /* in case move target overwrites an existing value,
        return the removed value, this can be taxing performance-wise,
        and is potentially unneeded */
        var removed = getValueByPointer(document, this.path);
        if (removed) {
            removed = helpers_1._deepClone(removed);
        }
        var originalValue = applyOperation(document, { op: "remove", path: this.from }).removed;
        applyOperation(document, { op: "add", path: this.path, value: originalValue });
        return { newDocument: document, removed: removed };
    },
    copy: function (obj, key, document) {
        var valueToCopy = getValueByPointer(document, this.from);
        // enforce copy by value so further operations don't affect source (see issue #177)
        applyOperation(document, { op: "add", path: this.path, value: helpers_1._deepClone(valueToCopy) });
        return { newDocument: document };
    },
    test: function (obj, key, document) {
        return { newDocument: document, test: areEquals(obj[key], this.value) };
    },
    _get: function (obj, key, document) {
        this.value = obj[key];
        return { newDocument: document };
    }
};
/* The operations applicable to an array. Many are the same as for the object */
var arrOps = {
    add: function (arr, i, document) {
        if (helpers_1.isInteger(i)) {
            arr.splice(i, 0, this.value);
        }
        else {
            arr[i] = this.value;
        }
        // this may be needed when using '-' in an array
        return { newDocument: document, index: i };
    },
    remove: function (arr, i, document) {
        var removedList = arr.splice(i, 1);
        return { newDocument: document, removed: removedList[0] };
    },
    replace: function (arr, i, document) {
        var removed = arr[i];
        arr[i] = this.value;
        return { newDocument: document, removed: removed };
    },
    move: objOps.move,
    copy: objOps.copy,
    test: objOps.test,
    _get: objOps._get
};
/**
 * Retrieves a value from a JSON document by a JSON pointer.
 * Returns the value.
 *
 * @param document The document to get the value from
 * @param pointer an escaped JSON pointer
 * @return The retrieved value
 */
function getValueByPointer(document, pointer) {
    if (pointer == '') {
        return document;
    }
    var getOriginalDestination = { op: "_get", path: pointer };
    applyOperation(document, getOriginalDestination);
    return getOriginalDestination.value;
}
exports.getValueByPointer = getValueByPointer;
/**
 * Apply a single JSON Patch Operation on a JSON document.
 * Returns the {newDocument, result} of the operation.
 * It modifies the `document` and `operation` objects - it gets the values by reference.
 * If you would like to avoid touching your values, clone them:
 * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.
 *
 * @param document The document to patch
 * @param operation The operation to apply
 * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.
 * @param mutateDocument Whether to mutate the original document or clone it before applying
 * @return `{newDocument, result}` after the operation
 */
function applyOperation(document, operation, validateOperation, mutateDocument) {
    if (validateOperation === void 0) { validateOperation = false; }
    if (mutateDocument === void 0) { mutateDocument = true; }
    if (validateOperation) {
        if (typeof validateOperation == 'function') {
            validateOperation(operation, 0, document, operation.path);
        }
        else {
            validator(operation, 0);
        }
    }
    /* ROOT OPERATIONS */
    if (operation.path === "") {
        var returnValue = { newDocument: document };
        if (operation.op === 'add') {
            returnValue.newDocument = operation.value;
            return returnValue;
        }
        else if (operation.op === 'replace') {
            returnValue.newDocument = operation.value;
            returnValue.removed = document; //document we removed
            return returnValue;
        }
        else if (operation.op === 'move' || operation.op === 'copy') {
            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field
            if (operation.op === 'move') {
                returnValue.removed = document;
            }
            return returnValue;
        }
        else if (operation.op === 'test') {
            returnValue.test = areEquals(document, operation.value);
            if (returnValue.test === false) {
                throw new exports.JsonPatchError("Test operation failed", 'TEST_OPERATION_FAILED', 0, operation, document);
            }
            returnValue.newDocument = document;
            return returnValue;
        }
        else if (operation.op === 'remove') {
            returnValue.removed = document;
            returnValue.newDocument = null;
            return returnValue;
        }
        else if (operation.op === '_get') {
            operation.value = document;
            return returnValue;
        }
        else {
            if (validateOperation) {
                throw new exports.JsonPatchError('Operation `op` property is not one of operations defined in RFC-6902', 'OPERATION_OP_INVALID', 0, operation, document);
            }
            else {
                return returnValue;
            }
        }
    } /* END ROOT OPERATIONS */
    else {
        if (!mutateDocument) {
            document = helpers_1._deepClone(document);
        }
        var path = operation.path || "";
        var keys = path.split('/');
        var obj = document;
        var t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift
        var len = keys.length;
        var existingPathFragment = undefined;
        var key = void 0;
        var validateFunction = void 0;
        if (typeof validateOperation == 'function') {
            validateFunction = validateOperation;
        }
        else {
            validateFunction = validator;
        }
        while (true) {
            key = keys[t];
            if (validateOperation) {
                if (existingPathFragment === undefined) {
                    if (obj[key] === undefined) {
                        existingPathFragment = keys.slice(0, t).join('/');
                    }
                    else if (t == len - 1) {
                        existingPathFragment = operation.path;
                    }
                    if (existingPathFragment !== undefined) {
                        validateFunction(operation, 0, document, existingPathFragment);
                    }
                }
            }
            t++;
            if (Array.isArray(obj)) {
                if (key === '-') {
                    key = obj.length;
                }
                else {
                    if (validateOperation && !helpers_1.isInteger(key)) {
                        throw new exports.JsonPatchError("Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index", "OPERATION_PATH_ILLEGAL_ARRAY_INDEX", 0, operation.path, operation);
                    } // only parse key when it's an integer for `arr.prop` to work
                    else if (helpers_1.isInteger(key)) {
                        key = ~~key;
                    }
                }
                if (t >= len) {
                    if (validateOperation && operation.op === "add" && key > obj.length) {
                        throw new exports.JsonPatchError("The specified index MUST NOT be greater than the number of elements in the array", "OPERATION_VALUE_OUT_OF_BOUNDS", 0, operation.path, operation);
                    }
                    var returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch
                    if (returnValue.test === false) {
                        throw new exports.JsonPatchError("Test operation failed", 'TEST_OPERATION_FAILED', 0, operation, document);
                    }
                    return returnValue;
                }
            }
            else {
                if (key && key.indexOf('~') != -1) {
                    key = helpers_1.unescapePathComponent(key);
                }
                if (t >= len) {
                    var returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch
                    if (returnValue.test === false) {
                        throw new exports.JsonPatchError("Test operation failed", 'TEST_OPERATION_FAILED', 0, operation, document);
                    }
                    return returnValue;
                }
            }
            obj = obj[key];
        }
    }
}
exports.applyOperation = applyOperation;
/**
 * Apply a full JSON Patch array on a JSON document.
 * Returns the {newDocument, result} of the patch.
 * It modifies the `document` object and `patch` - it gets the values by reference.
 * If you would like to avoid touching your values, clone them:
 * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.
 *
 * @param document The document to patch
 * @param patch The patch to apply
 * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.
 * @param mutateDocument Whether to mutate the original document or clone it before applying
 * @return An array of `{newDocument, result}` after the patch
 */
function applyPatch(document, patch, validateOperation, mutateDocument) {
    if (mutateDocument === void 0) { mutateDocument = true; }
    if (validateOperation) {
        if (!Array.isArray(patch)) {
            throw new exports.JsonPatchError('Patch sequence must be an array', 'SEQUENCE_NOT_AN_ARRAY');
        }
    }
    if (!mutateDocument) {
        document = helpers_1._deepClone(document);
    }
    var results = new Array(patch.length);
    for (var i = 0, length_1 = patch.length; i < length_1; i++) {
        results[i] = applyOperation(document, patch[i], validateOperation);
        document = results[i].newDocument; // in case root was replaced
    }
    results.newDocument = document;
    return results;
}
exports.applyPatch = applyPatch;
/**
 * Apply a single JSON Patch Operation on a JSON document.
 * Returns the updated document.
 * Suitable as a reducer.
 *
 * @param document The document to patch
 * @param operation The operation to apply
 * @return The updated document
 */
function applyReducer(document, operation) {
    var operationResult = applyOperation(document, operation);
    if (operationResult.test === false) {
        throw new exports.JsonPatchError("Test operation failed", 'TEST_OPERATION_FAILED', 0, operation, document);
    }
    return operationResult.newDocument;
}
exports.applyReducer = applyReducer;
/**
 * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.
 * @param {object} operation - operation object (patch)
 * @param {number} index - index of operation in the sequence
 * @param {object} [document] - object where the operation is supposed to be applied
 * @param {string} [existingPathFragment] - comes along with `document`
 */
function validator(operation, index, document, existingPathFragment) {
    if (typeof operation !== 'object' || operation === null || Array.isArray(operation)) {
        throw new exports.JsonPatchError('Operation is not an object', 'OPERATION_NOT_AN_OBJECT', index, operation, document);
    }
    else if (!objOps[operation.op]) {
        throw new exports.JsonPatchError('Operation `op` property is not one of operations defined in RFC-6902', 'OPERATION_OP_INVALID', index, operation, document);
    }
    else if (typeof operation.path !== 'string') {
        throw new exports.JsonPatchError('Operation `path` property is not a string', 'OPERATION_PATH_INVALID', index, operation, document);
    }
    else if (operation.path.indexOf('/') !== 0 && operation.path.length > 0) {
        // paths that aren't empty string should start with "/"
        throw new exports.JsonPatchError('Operation `path` property must start with "/"', 'OPERATION_PATH_INVALID', index, operation, document);
    }
    else if ((operation.op === 'move' || operation.op === 'copy') && typeof operation.from !== 'string') {
        throw new exports.JsonPatchError('Operation `from` property is not present (applicable in `move` and `copy` operations)', 'OPERATION_FROM_REQUIRED', index, operation, document);
    }
    else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && operation.value === undefined) {
        throw new exports.JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_REQUIRED', index, operation, document);
    }
    else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && helpers_1.hasUndefined(operation.value)) {
        throw new exports.JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED', index, operation, document);
    }
    else if (document) {
        if (operation.op == "add") {
            var pathLen = operation.path.split("/").length;
            var existingPathLen = existingPathFragment.split("/").length;
            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {
                throw new exports.JsonPatchError('Cannot perform an `add` operation at the desired path', 'OPERATION_PATH_CANNOT_ADD', index, operation, document);
            }
        }
        else if (operation.op === 'replace' || operation.op === 'remove' || operation.op === '_get') {
            if (operation.path !== existingPathFragment) {
                throw new exports.JsonPatchError('Cannot perform the operation at a path that does not exist', 'OPERATION_PATH_UNRESOLVABLE', index, operation, document);
            }
        }
        else if (operation.op === 'move' || operation.op === 'copy') {
            var existingValue = { op: "_get", path: operation.from, value: undefined };
            var error = validate([existingValue], document);
            if (error && error.name === 'OPERATION_PATH_UNRESOLVABLE') {
                throw new exports.JsonPatchError('Cannot perform the operation from a path that does not exist', 'OPERATION_FROM_UNRESOLVABLE', index, operation, document);
            }
        }
    }
}
exports.validator = validator;
/**
 * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.
 * If error is encountered, returns a JsonPatchError object
 * @param sequence
 * @param document
 * @returns {JsonPatchError|undefined}
 */
function validate(sequence, document, externalValidator) {
    try {
        if (!Array.isArray(sequence)) {
            throw new exports.JsonPatchError('Patch sequence must be an array', 'SEQUENCE_NOT_AN_ARRAY');
        }
        if (document) {
            //clone document and sequence so that we can safely try applying operations
            applyPatch(helpers_1._deepClone(document), helpers_1._deepClone(sequence), externalValidator || true);
        }
        else {
            externalValidator = externalValidator || validator;
            for (var i = 0; i < sequence.length; i++) {
                externalValidator(sequence[i], i, document, undefined);
            }
        }
    }
    catch (e) {
        if (e instanceof exports.JsonPatchError) {
            return e;
        }
        else {
            throw e;
        }
    }
}
exports.validate = validate;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var pSlice = Array.prototype.slice;
var objectKeys = __webpack_require__(38);
var isArguments = __webpack_require__(37);

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(28);
var hiddenKeys = __webpack_require__(13).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 25 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(16)('keys');
var uid = __webpack_require__(6);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(3);
var toIObject = __webpack_require__(4);
var arrayIndexOf = __webpack_require__(70)(false);
var IE_PROTO = __webpack_require__(26)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(5);


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);
var document = __webpack_require__(0).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(2) && !__webpack_require__(10)(function () {
  return Object.defineProperty(__webpack_require__(31)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 33 */
/***/ (function(module) {

module.exports = {"name":"rxq","version":"2.0.1","sideEffects":false,"description":"A reactive wrapper for the Qlik Analytics Platform APIs","main":"index.js","qix-version":"12.207.0","scripts":{"build-qix-methods":"node scripts/build-qix-methods.js","compile-cjs":"node scripts/compile_cjs.js","compile-esm5":"node scripts/compile_esm5.js","compile-esm2015":"node scripts/compile_esm2015.js","compile-all":"npm run compile-cjs && npm run compile-esm5 && npm run compile-esm2015","make-packages":"node scripts/make-packages.js","build":"node scripts/build-browser","build-min":"node scripts/build-browser --min","build-dist":"npm run compile-all && npm run make-packages && npm run build && npm run build-min","build-release":"npm run build-dist && cp -R dist/build/ rxq-build && zip rxq-build.zip rxq-build/* && rm -rf rxq-build/","test-unit":"mocha test/unit/*.spec.js","test-e2e":"mocha test/e2e/*.spec.js","test":"npm run test-unit && npm run test-e2e","test-compile":"mocha --compilers js:babel-core/register test/unit/*-spec.js","docs-build":"gitbook build","docs-serve":"gitbook serve"},"repository":{"type":"git","url":"git+https://github.com/axisgroup/RxQ.git"},"keywords":["qap","qix","engine","engineAPI","qrs"],"author":"Axis Group","license":"ISC","homepage":"https://github.com/axisgroup/RxQ#readme","devDependencies":{"babel-core":"^6.26.3","babel-loader":"^7.1.4","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-transform-es2015-modules-commonjs":"^6.26.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-plugin-transform-runtime":"^6.15.0","babel-polyfill":"^6.16.0","babel-preset-env":"^1.7.0","babel-preset-es2015":"^6.16.0","babel-regenerator-runtime":"^6.5.0","babel-register":"^6.26.0","chai":"^4.1.2","chai-generator":"^2.1.0","chai-spies":"^1.0.0","dockerode":"^2.5.3","fs-extra":"^4.0.2","gitbook-cli":"^2.3.2","mocha":"^4.0.1","mock-socket":"^7.0.0","raw-loader":"^0.5.1","rimraf":"^2.6.2","rxjs":"^6.2.0","string-replace-webpack-plugin":"^0.1.3","webpack":"^4.10.2"},"dependencies":{"babel-runtime":"^6.18.0","fast-json-patch":"^2.0.6","https-browserify":"0.0.1","stream-http":"~2.0.1","ws":"^1.1.1"},"peerDependencies":{"rxjs":"^6.2.0"},"bugs":{"url":"https://github.com/axisgroup/RxQ/issues"},"browser":{"ws":false},"directories":{"example":"examples"}};

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var _rxjs = rxjs,
    Observable = _rxjs.Observable;
var tap = rxjs.operators.tap;

exports.default = function (session) {
  return function (src$) {
    return Observable.create(function (observer) {
      session.suspend();
      src$.subscribe({
        next: function next(n) {
          return observer.next(n);
        },
        error: function error(err) {
          return observer.error(err);
        },
        complete: function complete() {
          session.unsuspend();
          observer.complete();
        }
      });
    });
  };
};

module.exports = exports["default"];

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var _rxjs$operators = rxjs.operators,
    switchMap = _rxjs$operators.switchMap,
    startWith = _rxjs$operators.startWith;
var _rxjs = rxjs,
    throwError = _rxjs.throwError;


var invalidations = function invalidations() {
  var startWithInvalidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return function (handle$) {
    return handle$.pipe(switchMap(function (handle) {
      return startWithInvalidation ? startWith(handle)(handle.invalidated$) : handle.invalidated$;
    }));
  };
};

exports.default = invalidations;
module.exports = exports["default"];

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _qAsk = __webpack_require__(21);

var _qAsk2 = _interopRequireDefault(_qAsk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var shareReplay = rxjs.operators.shareReplay;


var qAskReplay = function qAskReplay(methodname) {
  for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }

  return function (handle$) {
    return handle$.pipe(_qAsk2.default.apply(undefined, [methodname].concat(params)), shareReplay(1));
  };
};

exports.default = qAskReplay;
module.exports = exports["default"];

/***/ }),
/* 37 */
/***/ (function(module, exports) {

var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};


/***/ }),
/* 38 */
/***/ (function(module, exports) {

exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var equalsOptions = { strict: true };
var _equals = __webpack_require__(23);
var areEquals = function (a, b) {
    return _equals(a, b, equalsOptions);
};
var helpers_1 = __webpack_require__(11);
var core_1 = __webpack_require__(22);
/* export all core functions */
var core_2 = __webpack_require__(22);
exports.applyOperation = core_2.applyOperation;
exports.applyPatch = core_2.applyPatch;
exports.applyReducer = core_2.applyReducer;
exports.getValueByPointer = core_2.getValueByPointer;
exports.validate = core_2.validate;
exports.validator = core_2.validator;
/* export some helpers */
var helpers_2 = __webpack_require__(11);
exports.JsonPatchError = helpers_2.PatchError;
exports.deepClone = helpers_2._deepClone;
exports.escapePathComponent = helpers_2.escapePathComponent;
exports.unescapePathComponent = helpers_2.unescapePathComponent;
var beforeDict = [];
var Mirror = (function () {
    function Mirror(obj) {
        this.observers = [];
        this.obj = obj;
    }
    return Mirror;
}());
var ObserverInfo = (function () {
    function ObserverInfo(callback, observer) {
        this.callback = callback;
        this.observer = observer;
    }
    return ObserverInfo;
}());
function getMirror(obj) {
    for (var i = 0, length = beforeDict.length; i < length; i++) {
        if (beforeDict[i].obj === obj) {
            return beforeDict[i];
        }
    }
}
function getObserverFromMirror(mirror, callback) {
    for (var j = 0, length = mirror.observers.length; j < length; j++) {
        if (mirror.observers[j].callback === callback) {
            return mirror.observers[j].observer;
        }
    }
}
function removeObserverFromMirror(mirror, observer) {
    for (var j = 0, length = mirror.observers.length; j < length; j++) {
        if (mirror.observers[j].observer === observer) {
            mirror.observers.splice(j, 1);
            return;
        }
    }
}
/**
 * Detach an observer from an object
 */
function unobserve(root, observer) {
    observer.unobserve();
}
exports.unobserve = unobserve;
/**
 * Observes changes made to an object, which can then be retrieved using generate
 */
function observe(obj, callback) {
    var patches = [];
    var root = obj;
    var observer;
    var mirror = getMirror(obj);
    if (!mirror) {
        mirror = new Mirror(obj);
        beforeDict.push(mirror);
    }
    else {
        observer = getObserverFromMirror(mirror, callback);
    }
    if (observer) {
        return observer;
    }
    observer = {};
    mirror.value = helpers_1._deepClone(obj);
    if (callback) {
        observer.callback = callback;
        observer.next = null;
        var dirtyCheck = function () {
            generate(observer);
        };
        var fastCheck = function () {
            clearTimeout(observer.next);
            observer.next = setTimeout(dirtyCheck);
        };
        if (typeof window !== 'undefined') {
            if (window.addEventListener) {
                window.addEventListener('mouseup', fastCheck);
                window.addEventListener('keyup', fastCheck);
                window.addEventListener('mousedown', fastCheck);
                window.addEventListener('keydown', fastCheck);
                window.addEventListener('change', fastCheck);
            }
            else {
                document.documentElement.attachEvent('onmouseup', fastCheck);
                document.documentElement.attachEvent('onkeyup', fastCheck);
                document.documentElement.attachEvent('onmousedown', fastCheck);
                document.documentElement.attachEvent('onkeydown', fastCheck);
                document.documentElement.attachEvent('onchange', fastCheck);
            }
        }
    }
    observer.patches = patches;
    observer.object = obj;
    observer.unobserve = function () {
        generate(observer);
        clearTimeout(observer.next);
        removeObserverFromMirror(mirror, observer);
        if (typeof window !== 'undefined') {
            if (window.removeEventListener) {
                window.removeEventListener('mouseup', fastCheck);
                window.removeEventListener('keyup', fastCheck);
                window.removeEventListener('mousedown', fastCheck);
                window.removeEventListener('keydown', fastCheck);
            }
            else {
                document.documentElement.detachEvent('onmouseup', fastCheck);
                document.documentElement.detachEvent('onkeyup', fastCheck);
                document.documentElement.detachEvent('onmousedown', fastCheck);
                document.documentElement.detachEvent('onkeydown', fastCheck);
            }
        }
    };
    mirror.observers.push(new ObserverInfo(callback, observer));
    return observer;
}
exports.observe = observe;
/**
 * Generate an array of patches from an observer
 */
function generate(observer) {
    var mirror;
    for (var i = 0, length = beforeDict.length; i < length; i++) {
        if (beforeDict[i].obj === observer.object) {
            mirror = beforeDict[i];
            break;
        }
    }
    _generate(mirror.value, observer.object, observer.patches, "");
    if (observer.patches.length) {
        core_1.applyPatch(mirror.value, observer.patches);
    }
    var temp = observer.patches;
    if (temp.length > 0) {
        observer.patches = [];
        if (observer.callback) {
            observer.callback(temp);
        }
    }
    return temp;
}
exports.generate = generate;
// Dirty check if obj is different from mirror, generate patches and update mirror
function _generate(mirror, obj, patches, path) {
    if (obj === mirror) {
        return;
    }
    if (typeof obj.toJSON === "function") {
        obj = obj.toJSON();
    }
    var newKeys = helpers_1._objectKeys(obj);
    var oldKeys = helpers_1._objectKeys(mirror);
    var changed = false;
    var deleted = false;
    //if ever "move" operation is implemented here, make sure this test runs OK: "should not generate the same patch twice (move)"
    for (var t = oldKeys.length - 1; t >= 0; t--) {
        var key = oldKeys[t];
        var oldVal = mirror[key];
        if (helpers_1.hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {
            var newVal = obj[key];
            if (typeof oldVal == "object" && oldVal != null && typeof newVal == "object" && newVal != null) {
                _generate(oldVal, newVal, patches, path + "/" + helpers_1.escapePathComponent(key));
            }
            else {
                if (oldVal !== newVal) {
                    changed = true;
                    patches.push({ op: "replace", path: path + "/" + helpers_1.escapePathComponent(key), value: helpers_1._deepClone(newVal) });
                }
            }
        }
        else {
            patches.push({ op: "remove", path: path + "/" + helpers_1.escapePathComponent(key) });
            deleted = true; // property has been deleted
        }
    }
    if (!deleted && newKeys.length == oldKeys.length) {
        return;
    }
    for (var t = 0; t < newKeys.length; t++) {
        var key = newKeys[t];
        if (!helpers_1.hasOwnProperty(mirror, key) && obj[key] !== undefined) {
            patches.push({ op: "add", path: path + "/" + helpers_1.escapePathComponent(key), value: helpers_1._deepClone(obj[key]) });
        }
    }
}
/**
 * Create an array of patches from the differences in two objects
 */
function compare(tree1, tree2) {
    var patches = [];
    _generate(tree1, tree2, patches, '');
    return patches;
}
exports.compare = compare;


/***/ }),
/* 40 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (config) {
    var cfg = {};

    // Update prefix
    var prefix = config.prefix ? config.prefix : '/';

    if (prefix.slice(0, 1) !== '/') {
        prefix = '/' + prefix;
    };
    if (prefix.split('').pop() !== '/') {
        prefix = prefix + '/';
    };

    // Copy properties + defaults
    if (config) {
        cfg.mark = config.mark;
        cfg.port = config.port;
        cfg.appname = config.appname || false;
        cfg.host = config.host;
        cfg.prefix = prefix;
        cfg.origin = config.origin;
        cfg.isSecure = config.isSecure;
        cfg.rejectUnauthorized = config.rejectUnauthorized;
        cfg.headers = config.headers || {};
        cfg.ticket = config.ticket || false;
        cfg.key = config.key || null;
        cfg.cert = config.cert || null;
        cfg.ca = config.ca || null;
        cfg.pfx = config.pfx || null;
        cfg.passphrase = config.passphrase || null;
        cfg.identity = config.identity;
    }

    return cfg;
};

;
module.exports = exports['default'];

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (config) {
    var cfg = {};
    // Copy properties + defaults
    if (config) {
        cfg.port = config.port;
        cfg.appname = config.appname || false;
        cfg.host = config.host;
        cfg.prefix = config.prefix || false;
        cfg.isSecure = config.isSecure;
        cfg.identity = config.identity;
        cfg.ticket = config.ticket;
    }

    return ConnectionString(cfg);
};

;

function ConnectionString(config) {

    // Define host
    var host = config && config.host ? config.host : 'localhost';
    // Define port
    var port;

    // Configure port if port is undefined
    if (config && config.port === undefined) {
        port = '';
    } else {
        port = config && config.port ? ':' + config.port : '';
    };

    // Define secure vs. unsecure
    var isSecure = config && config.isSecure ? 'wss://' : 'ws://';

    // Prefix
    var prefix = config.prefix ? config.prefix : '/';

    if (prefix.slice(0, 1) !== '/') {
        prefix = '/' + prefix;
    };
    if (prefix.split('').pop() !== '/') {
        prefix = prefix + '/';
    };

    var suffix = config.appname ? 'app/' + config.appname : 'app';
    var identity = config && config.identity ? '/identity/' + config.identity : '';
    var ticket = config.ticket ? '?qlikTicket=' + config.ticket : '';

    var url = isSecure + host + port + prefix + suffix + identity + ticket;

    return url;
}
module.exports = exports['default'];

/***/ }),
/* 43 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 44 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = connectWS;

var _qixConnectString = __webpack_require__(42);

var _qixConnectString2 = _interopRequireDefault(_qixConnectString);

var _qixConnectOptions = __webpack_require__(41);

var _qixConnectOptions2 = _interopRequireDefault(_qixConnectOptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function connectWS(config) {
  var IS_NODE = typeof process !== "undefined" && Object.prototype.toString.call(global.process) === "[object process]";

  var _WebSocket = void 0;

  if (IS_NODE) {
    try {
      _WebSocket = __webpack_require__(40);
    } catch (e) {}
  } else {
    try {
      _WebSocket = WebSocket;
    } catch (e) {}
  }

  var url = (0, _qixConnectString2.default)(config);
  var options = (0, _qixConnectOptions2.default)(config);

  if (typeof _WebSocket === "function") {
    var ws = IS_NODE ? new _WebSocket(url, null, options) : new _WebSocket(url);
    return ws;
  } else {
    throw new Error("WebSocket is not defined");
  }
}
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(44), __webpack_require__(43)))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _rxjs = rxjs,
    defer = _rxjs.defer,
    Subject = _rxjs.Subject;
var _rxjs$operators = rxjs.operators,
    filter = _rxjs$operators.filter,
    mapTo = _rxjs$operators.mapTo,
    publish = _rxjs$operators.publish,
    refCount = _rxjs$operators.refCount,
    map = _rxjs$operators.map,
    take = _rxjs$operators.take,
    mergeMap = _rxjs$operators.mergeMap,
    groupBy = _rxjs$operators.groupBy,
    scan = _rxjs$operators.scan;

var Handle = function () {
  function Handle(session, handle, qClass) {
    _classCallCheck(this, Handle);

    this.session = session;
    this.handle = handle;
    this.qClass = qClass;

    this.invalidated$ = session.changes$.pipe(filter(function (f) {
      return f.indexOf(handle) > -1;
    }), mapTo(this), publish(), refCount());
  }

  _createClass(Handle, [{
    key: "ask",
    value: function ask(method) {
      var _this = this;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return defer(function () {
        return _this.session.ask({
          method: method,
          handle: _this.handle,
          params: args,
          qClass: _this.qClass
        });
      });
    }
  }]);

  return Handle;
}();

// // handle request id generator
// this.seqGen = (function*() {
//   var index = 1;
//   while (true) yield index++;
// })();

// // Subject for request methods; expects [methodName: string, args: [], handleRequestId: int]
// this.requests$ = new Subject();

// // Response thread
// this.responses$ = this.requests$.pipe(
//   // Get the raw responses from the socket
//   mergeMap(([method, args, handleRequestId]) =>
//     this.session
//       .ask({
//         method: method,
//         handle: this.handle,
//         params: args
//       })
//       .pipe(
//         map(response => ({
//           response,
//           handleRequestId,
//           method
//         }))
//       )
//   ),
//   // Group the responses by the method called
//   groupBy(r => r.method),
//   // Transform the method responses individually, then merge back in
//   mergeMap(methodResp$ =>
//     // Use scan logic to handle delta mode patching if applicable for each method
//     methodResp$.pipe(
//       scan((acc, curr) => {
//         // if delta logic....

//         // no delta
//         return curr;
//       }, {})
//     )
//   ),
//   publish() // is this necessary? would it be better to move this logic into the session?
// );

// this.responses$.connect();

// // Generate a handle request id
// const handleRequestId = this.seqGen.next().value;

// return defer(() => {
//   // Listen for the response
//   const response$ = this.responses$.pipe(
//     filter(resp => resp.handleRequestId === handleRequestId),
//     map(resp => resp.response),
//     take(1)
//   );

//   // Send the request
//   this.requests$.next([method, args, handleRequestId]);

//   // Return the response
//   return response$;
// });


exports.default = Handle;
module.exports = exports["default"];

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _handle = __webpack_require__(46);

var _handle2 = _interopRequireDefault(_handle);

var _connectWS = __webpack_require__(45);

var _connectWS2 = _interopRequireDefault(_connectWS);

var _fastJsonPatch = __webpack_require__(39);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _rxjs = rxjs,
    Observable = _rxjs.Observable,
    Subject = _rxjs.Subject,
    BehaviorSubject = _rxjs.BehaviorSubject,
    $of = _rxjs.of,
    $throw = _rxjs.throwError,
    merge = _rxjs.merge,
    concat = _rxjs.concat;
var _rxjs$operators = rxjs.operators,
    groupBy = _rxjs$operators.groupBy,
    partition = _rxjs$operators.partition,
    publishLast = _rxjs$operators.publishLast,
    refCount = _rxjs$operators.refCount,
    map = _rxjs$operators.map,
    withLatestFrom = _rxjs$operators.withLatestFrom,
    publish = _rxjs$operators.publish,
    filter = _rxjs$operators.filter,
    mergeMap = _rxjs$operators.mergeMap,
    concatMap = _rxjs$operators.concatMap,
    take = _rxjs$operators.take,
    mapTo = _rxjs$operators.mapTo,
    distinctUntilChanged = _rxjs$operators.distinctUntilChanged,
    bufferToggle = _rxjs$operators.bufferToggle,
    pluck = _rxjs$operators.pluck,
    skip = _rxjs$operators.skip,
    switchMap = _rxjs$operators.switchMap,
    takeUntil = _rxjs$operators.takeUntil,
    ignoreElements = _rxjs$operators.ignoreElements,
    tap = _rxjs$operators.tap,
    shareReplay = _rxjs$operators.shareReplay,
    scan = _rxjs$operators.scan;

var Session = function () {
  function Session(config) {
    var _this = this;

    _classCallCheck(this, Session);

    var session = this;

    // closed signal
    this.closed$ = new Subject();

    // delta mode
    var delta = config.delta || false;

    // Suspended changes state
    var suspended$ = new BehaviorSubject(false);

    // Connect WS
    var ws$ = Observable.create(function (observer) {
      // If they supplied a WebSocket, use it. Otherwise, build one
      if (typeof config.ws !== "undefined") {
        observer.next(config.ws);
        observer.complete();
      } else {
        var ws = (0, _connectWS2.default)(config);

        ws.addEventListener("open", function (evt) {
          observer.next(ws);
          observer.complete();
        });
      }

      return;
    }).pipe(publishLast(), refCount());

    // On close signal, execute side effect to close the websocket
    this.closed$.pipe(withLatestFrom(ws$), take(1)).subscribe(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          close = _ref2[0],
          ws = _ref2[1];

      return ws.close();
    });

    // WebSocket close events
    var wsClose$ = ws$.pipe(switchMap(function (ws) {
      return Observable.create(function (observer) {
        ws.addEventListener("close", function (evt) {
          observer.next(evt);
          observer.complete();
        });
      });
    }),
    // Side effects when websocket gets closed
    tap(function () {
      // complete the requests stream
      requests$.complete();
      // complete the suspended stream
      suspended$.complete();
    }));

    // Requests
    var requests$ = new Subject();

    // Hook in request pipeline
    requests$.pipe(withLatestFrom(ws$), takeUntil(wsClose$)).subscribe(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          req = _ref4[0],
          ws = _ref4[1];

      var request = {
        id: req.id,
        handle: req.handle,
        method: req.method,
        params: req.params
      };

      // Set delta if necessary
      if (_typeof(config.delta) === "object") {
        var overrides = config.delta[req.qClass] || [];
        if (overrides.indexOf(req.method) > -1) {
          request.delta = true;
        }
      } else if (config.delta === true) {
        request.delta = true;
      }

      ws.send(JSON.stringify(request));
    });

    // Responses
    var responses$ = ws$.pipe(concatMap(function (ws) {
      return Observable.create(function (observer) {
        ws.addEventListener("message", function (evt) {
          var response = JSON.parse(evt.data);
          observer.next(response);
        });

        ws.addEventListener("error", function (err) {
          observer.error(err);
        });

        ws.addEventListener("close", function () {
          observer.complete();
        });
      });
    }), publish(), refCount());

    // Link responses with requests
    var responsesWithRequest$ = requests$.pipe(
    // this prevents errors from going through the delta processing chain. is that appropriate?
    filter(function (response) {
      return !response.hasOwnProperty("error");
    }), mergeMap(function (req) {
      return responses$.pipe(filter(function (response) {
        return req.id === response.id;
      }), take(1), map(function (response) {
        return {
          request: req,
          response: response
        };
      }));
    }));

    // Responses with errors
    var errorResponses$ = responses$.pipe(filter(function (resp) {
      return resp.hasOwnProperty("error");
    }));

    // Split direct responses from delta responses

    var _responsesWithRequest = responsesWithRequest$.pipe(filter(function (reqResp) {
      return !reqResp.response.hasOwnProperty("error");
    }), partition(function (reqResp) {
      return !reqResp.response.delta;
    })),
        _responsesWithRequest2 = _slicedToArray(_responsesWithRequest, 2),
        directResponse$ = _responsesWithRequest2[0],
        deltaResponses$ = _responsesWithRequest2[1];

    // Apply JSON Patching to delta responses


    var deltaResponsesCalculated$ = deltaResponses$.pipe(groupBy(function (reqResp) {
      return reqResp.request.handle + " - " + reqResp.request.method;
    }), mergeMap(function (grouped$) {
      return grouped$.pipe(scan(function (acc, reqResp) {
        var response = reqResp.response;

        var resultKeys = Object.keys(response.result);
        return _extends({}, reqResp, {
          response: _extends({}, reqResp.response, {
            result: resultKeys.reduce(function (patchedResult, key) {
              var currentPatches = response.result[key];
              // fix for enigma.js root path which is out of compliance with JSON-Pointer spec used by JSON-Patch spec
              // https://tools.ietf.org/html/rfc6902#page-3
              // https://tools.ietf.org/html/rfc6901#section-5
              var transformedPatches = currentPatches.map(function (patch) {
                return patch.path === "/" ? _extends({}, patch, { path: "" }) : patch;
              });
              return _extends({}, patchedResult, _defineProperty({}, key, (0, _fastJsonPatch.applyPatch)(patchedResult[key], transformedPatches).newDocument));
            }, acc.response.result)
          })
        });
      }, {
        response: {
          result: {}
        }
      }));
    }));

    // Merge the direct and delta responses back together and parse them
    var mappedResponses$ = merge(directResponse$.pipe(map(function (reqResp) {
      return reqResp.response;
    })), deltaResponsesCalculated$.pipe(map(function (reqResp) {
      return reqResp.response;
    }))).pipe(map(function (response) {
      var result = response.result;
      var resultKeys = Object.keys(result);
      if (result.hasOwnProperty("qReturn") && result.qReturn.hasOwnProperty("qHandle")) {
        return {
          id: response.id,
          result: new _handle2.default(_this, result.qReturn.qHandle, result.qReturn.qType)
        };
      } else if (resultKeys.length === 1) {
        return {
          id: response.id,
          result: result[resultKeys[0]]
        };
      } else {
        return response;
      }
    }));

    // Publish response stream
    var finalResponse$ = merge(mappedResponses$, errorResponses$).pipe(publish());

    // Connect the response stream
    var finalResponseSub = finalResponse$.connect();

    // Changes
    var changesIn$ = responses$.pipe(filter(function (f) {
      return f.hasOwnProperty("change");
    }), pluck("change"));

    // Buffer changes during suspends
    var changes$ = changesIn$.pipe(bufferInvalids(suspended$));

    // Session Notifications
    var notifications$ = merge(requests$.pipe(map(function (req) {
      return {
        type: "traffic:sent",
        data: req
      };
    })), responses$.pipe(map(function (resp) {
      return {
        type: "traffic:received",
        data: resp
      };
    })), changes$.pipe(map(function (changes) {
      return {
        type: "traffic:change",
        data: changes
      };
    })), suspended$.pipe(map(function (suspend) {
      return {
        type: "traffic:suspend-status",
        data: suspend
      };
    })), wsClose$.pipe(map(function (evt) {
      return {
        type: "socket:close",
        data: evt
      };
    })));

    // Sequence generator
    this.seqGen = /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var index;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              index = 1;

            case 1:
              if (false) {}

              _context.next = 4;
              return index++;

            case 4:
              _context.next = 1;
              break;

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    })();

    Object.assign(this, {
      ws$: ws$,
      requests$: requests$,
      finalResponse$: finalResponse$,
      changes$: changes$,
      suspended$: suspended$,
      notifications$: notifications$,
      delta: delta
    });
  }

  _createClass(Session, [{
    key: "ask",
    value: function ask(action) {
      var requestId = this.seqGen.next().value;

      var request = {
        id: requestId,
        jsonrpc: "2.0",
        handle: action.handle,
        method: action.method,
        params: action.params,
        qClass: action.qClass
      };

      this.requests$.next(request);

      return this.finalResponse$.pipe(filter(function (r) {
        return r.id === requestId;
      }), mergeMap(function (m) {
        if (m.hasOwnProperty("error")) {
          return $throw(m.error);
        } else {
          return $of(m);
        }
      }), map(function (m) {
        return m.result;
      }), take(1));
    }
  }, {
    key: "global",
    value: function global() {
      var _this2 = this;

      var globalHandle = new _handle2.default(this, -1, "Global");

      // ask for a sample call to test that we are authenticated properly, then either pass global or pass the error
      return this.ws$.pipe(switchMap(function () {
        return _this2.ask({
          handle: -1,
          method: "GetUniqueID",
          params: [],
          qClass: "Global"
        });
      }), mapTo(globalHandle), publishLast(), refCount());
    }
  }, {
    key: "close",
    value: function close() {
      this.closed$.next(null);
    }
  }]);

  return Session;
}();

exports.default = Session;


function bufferInvalids(status$) {
  return function (src$) {
    var values = [];
    var directStream$ = new Observable.create(function (observer) {
      return src$.pipe(withLatestFrom(status$)).subscribe(function (_ref5) {
        var _ref6 = _slicedToArray(_ref5, 2),
            val = _ref6[0],
            status = _ref6[1];

        if (status) {
          values.push.apply(values, _toConsumableArray(val));
        } else {
          observer.next(val);
        }
      }, function (err) {
        return observer.error(err);
      }, function () {
        return observer.complete();
      });
    });

    var bufferStream$ = status$.pipe(distinctUntilChanged(), filter(function (f) {
      return !f;
    }), map(function () {
      return values;
    }), filter(function (f) {
      return f.length > 0;
    }), takeUntil(concat(src$.pipe(ignoreElements()), $of(undefined))));

    return merge(directStream$, bufferStream$);
  };
}
module.exports = exports["default"];

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = connectSession;

var _session = __webpack_require__(47);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _rxjs = rxjs,
    defer = _rxjs.defer;
function connectSession(config) {
  var session = new _session2.default(config);

  return {
    global$: session.global(),
    notifications$: session.notifications$,
    close: function close() {
      return session.close();
    },
    suspend: function suspend() {
      return session.suspended$.next(true);
    },
    unsuspend: function unsuspend() {
      return session.suspended$.next(false);
    }
  };
}
module.exports = exports["default"];

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var GetBaseBNFString = "GetBaseBNFString";
var GetBaseBNFHash = "GetBaseBNFHash";
var GetBaseBNF = "GetBaseBNF";
var EngineVersion = "EngineVersion";
var GetStreamList = "GetStreamList";
var GetCustomConnectors = "GetCustomConnectors";
var GetSupportedCodePages = "GetSupportedCodePages";
var GetFolderItemsForPath = "GetFolderItemsForPath";
var GetLogicalDriveStrings = "GetLogicalDriveStrings";
var GetDefaultAppFolder = "GetDefaultAppFolder";
var IsValidConnectionString = "IsValidConnectionString";
var GetDatabasesFromConnectionString = "GetDatabasesFromConnectionString";
var GetOleDbProviders = "GetOleDbProviders";
var GetOdbcDsns = "GetOdbcDsns";
var GetFunctions = "GetFunctions";
var GetBNF = "GetBNF";
var CancelReload = "CancelReload";
var ConfigureReload = "ConfigureReload";
var GetAppEntry = "GetAppEntry";
var ProductVersion = "ProductVersion";
var CreateSessionAppFromApp = "CreateSessionAppFromApp";
var CreateSessionApp = "CreateSessionApp";
var OpenDoc = "OpenDoc";
var GetUniqueID = "GetUniqueID";
var IsPersonalMode = "IsPersonalMode";
var PublishApp = "PublishApp";
var ExportApp = "ExportApp";
var CopyApp = "CopyApp";
var ReplaceAppFromID = "ReplaceAppFromID";
var ReloadExtensionList = "ReloadExtensionList";
var ShutdownProcess = "ShutdownProcess";
var CancelRequest = "CancelRequest";
var IsDesktopMode = "IsDesktopMode";
var DeleteApp = "DeleteApp";
var CreateApp = "CreateApp";
var AllowCreateApp = "AllowCreateApp";
var GetActiveDoc = "GetActiveDoc";
var CreateDocEx = "CreateDocEx";
var GetAuthenticatedUser = "GetAuthenticatedUser";
var InteractDone = "InteractDone";
var GetInteract = "GetInteract";
var GetDocList = "GetDocList";
var QTProduct = "QTProduct";
var OSName = "OSName";
var OSVersion = "OSVersion";
var QvVersion = "QvVersion";
var GetProgress = "GetProgress";
var AbortAll = "AbortAll";
var AbortRequest = "AbortRequest";
exports.AbortRequest = AbortRequest;
exports.AbortAll = AbortAll;
exports.GetProgress = GetProgress;
exports.QvVersion = QvVersion;
exports.OSVersion = OSVersion;
exports.OSName = OSName;
exports.QTProduct = QTProduct;
exports.GetDocList = GetDocList;
exports.GetInteract = GetInteract;
exports.InteractDone = InteractDone;
exports.GetAuthenticatedUser = GetAuthenticatedUser;
exports.CreateDocEx = CreateDocEx;
exports.GetActiveDoc = GetActiveDoc;
exports.AllowCreateApp = AllowCreateApp;
exports.CreateApp = CreateApp;
exports.DeleteApp = DeleteApp;
exports.IsDesktopMode = IsDesktopMode;
exports.CancelRequest = CancelRequest;
exports.ShutdownProcess = ShutdownProcess;
exports.ReloadExtensionList = ReloadExtensionList;
exports.ReplaceAppFromID = ReplaceAppFromID;
exports.CopyApp = CopyApp;
exports.ExportApp = ExportApp;
exports.PublishApp = PublishApp;
exports.IsPersonalMode = IsPersonalMode;
exports.GetUniqueID = GetUniqueID;
exports.OpenDoc = OpenDoc;
exports.CreateSessionApp = CreateSessionApp;
exports.CreateSessionAppFromApp = CreateSessionAppFromApp;
exports.ProductVersion = ProductVersion;
exports.GetAppEntry = GetAppEntry;
exports.ConfigureReload = ConfigureReload;
exports.CancelReload = CancelReload;
exports.GetBNF = GetBNF;
exports.GetFunctions = GetFunctions;
exports.GetOdbcDsns = GetOdbcDsns;
exports.GetOleDbProviders = GetOleDbProviders;
exports.GetDatabasesFromConnectionString = GetDatabasesFromConnectionString;
exports.IsValidConnectionString = IsValidConnectionString;
exports.GetDefaultAppFolder = GetDefaultAppFolder;
exports.GetLogicalDriveStrings = GetLogicalDriveStrings;
exports.GetFolderItemsForPath = GetFolderItemsForPath;
exports.GetSupportedCodePages = GetSupportedCodePages;
exports.GetCustomConnectors = GetCustomConnectors;
exports.GetStreamList = GetStreamList;
exports.EngineVersion = EngineVersion;
exports.GetBaseBNF = GetBaseBNF;
exports.GetBaseBNFHash = GetBaseBNFHash;
exports.GetBaseBNFString = GetBaseBNFString;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var GetScriptEx = "GetScriptEx";
var SearchObjects = "SearchObjects";
var SearchResults = "SearchResults";
var SelectAssociations = "SelectAssociations";
var SearchAssociations = "SearchAssociations";
var SearchSuggest = "SearchSuggest";
var SendGenericCommandToCustomConnector = "SendGenericCommandToCustomConnector";
var GetFileTablesEx = "GetFileTablesEx";
var GetFileTablePreview = "GetFileTablePreview";
var GetFileTableFields = "GetFileTableFields";
var GetFileTables = "GetFileTables";
var GuessFileType = "GuessFileType";
var GetFolderItemsForConnection = "GetFolderItemsForConnection";
var GetDatabaseTablePreview = "GetDatabaseTablePreview";
var GetDatabaseTableFields = "GetDatabaseTableFields";
var GetDatabaseTables = "GetDatabaseTables";
var GetDatabaseOwners = "GetDatabaseOwners";
var GetDatabases = "GetDatabases";
var GetDatabaseInfo = "GetDatabaseInfo";
var GetConnections = "GetConnections";
var GetConnection = "GetConnection";
var DeleteConnection = "DeleteConnection";
var ModifyConnection = "ModifyConnection";
var CreateConnection = "CreateConnection";
var GetIncludeFileContent = "GetIncludeFileContent";
var SetFavoriteVariables = "SetFavoriteVariables";
var GetFavoriteVariables = "GetFavoriteVariables";
var CheckScriptSyntax = "CheckScriptSyntax";
var SetScript = "SetScript";
var GetSetAnalysis = "GetSetAnalysis";
var ForwardCount = "ForwardCount";
var BackCount = "BackCount";
var DoReloadEx = "DoReloadEx";
var GetLibraryContent = "GetLibraryContent";
var GetContentLibraries = "GetContentLibraries";
var GetMediaList = "GetMediaList";
var GetAssociationScores = "GetAssociationScores";
var SaveObjects = "SaveObjects";
var Scramble = "Scramble";
var FindMatchingFields = "FindMatchingFields";
var GetMatchingFields = "GetMatchingFields";
var Publish = "Publish";
var AbortModal = "AbortModal";
var Resume = "Resume";
var GetAllInfos = "GetAllInfos";
var GetFieldOnTheFlyByName = "GetFieldOnTheFlyByName";
var AddFieldFromExpression = "AddFieldFromExpression";
var CloneBookmark = "CloneBookmark";
var ApplyBookmark = "ApplyBookmark";
var GetBookmark = "GetBookmark";
var DestroyBookmark = "DestroyBookmark";
var CreateBookmark = "CreateBookmark";
var RemoveAlternateState = "RemoveAlternateState";
var AddAlternateState = "AddAlternateState";
var CheckNumberOrExpression = "CheckNumberOrExpression";
var CheckExpression = "CheckExpression";
var GetVariableByName = "GetVariableByName";
var GetVariableById = "GetVariableById";
var DestroyVariableByName = "DestroyVariableByName";
var DestroyVariableById = "DestroyVariableById";
var CreateVariableEx = "CreateVariableEx";
var DestroySessionVariable = "DestroySessionVariable";
var CreateSessionVariable = "CreateSessionVariable";
var CloneMeasure = "CloneMeasure";
var GetMeasure = "GetMeasure";
var DestroyMeasure = "DestroyMeasure";
var CreateMeasure = "CreateMeasure";
var CloneDimension = "CloneDimension";
var GetDimension = "GetDimension";
var DestroyDimension = "DestroyDimension";
var CreateDimension = "CreateDimension";
var ClearUndoBuffer = "ClearUndoBuffer";
var Redo = "Redo";
var Undo = "Undo";
var DestroyDraft = "DestroyDraft";
var CommitDraft = "CommitDraft";
var CreateDraft = "CreateDraft";
var CloneObject = "CloneObject";
var GetBookmarks = "GetBookmarks";
var GetObjects = "GetObjects";
var GetObject = "GetObject";
var DestroyObject = "DestroyObject";
var CreateObject = "CreateObject";
var DestroySessionObject = "DestroySessionObject";
var CreateSessionObject = "CreateSessionObject";
var GetLineage = "GetLineage";
var GetAppProperties = "GetAppProperties";
var SetAppProperties = "SetAppProperties";
var GetAppLayout = "GetAppLayout";
var GetTableData = "GetTableData";
var DoSave = "DoSave";
var SetFetchLimit = "SetFetchLimit";
var GetTextMacros = "GetTextMacros";
var GetScript = "GetScript";
var SetScriptBreakpoints = "SetScriptBreakpoints";
var GetScriptBreakpoints = "GetScriptBreakpoints";
var DoReload = "DoReload";
var GetEmptyScript = "GetEmptyScript";
var SetViewDlgSaveInfo = "SetViewDlgSaveInfo";
var GetViewDlgSaveInfo = "GetViewDlgSaveInfo";
var GetTablesAndKeys = "GetTablesAndKeys";
var GetLocaleInfo = "GetLocaleInfo";
var RemoveVariable = "RemoveVariable";
var CreateVariable = "CreateVariable";
var Forward = "Forward";
var Back = "Back";
var UnlockAll = "UnlockAll";
var LockAll = "LockAll";
var ClearAll = "ClearAll";
var EvaluateEx = "EvaluateEx";
var Evaluate = "Evaluate";
var SetLooselyCoupledVector = "SetLooselyCoupledVector";
var GetLooselyCoupledVector = "GetLooselyCoupledVector";
var GetVariable = "GetVariable";
var GetFieldDescription = "GetFieldDescription";
var GetField = "GetField";
exports.GetField = GetField;
exports.GetFieldDescription = GetFieldDescription;
exports.GetVariable = GetVariable;
exports.GetLooselyCoupledVector = GetLooselyCoupledVector;
exports.SetLooselyCoupledVector = SetLooselyCoupledVector;
exports.Evaluate = Evaluate;
exports.EvaluateEx = EvaluateEx;
exports.ClearAll = ClearAll;
exports.LockAll = LockAll;
exports.UnlockAll = UnlockAll;
exports.Back = Back;
exports.Forward = Forward;
exports.CreateVariable = CreateVariable;
exports.RemoveVariable = RemoveVariable;
exports.GetLocaleInfo = GetLocaleInfo;
exports.GetTablesAndKeys = GetTablesAndKeys;
exports.GetViewDlgSaveInfo = GetViewDlgSaveInfo;
exports.SetViewDlgSaveInfo = SetViewDlgSaveInfo;
exports.GetEmptyScript = GetEmptyScript;
exports.DoReload = DoReload;
exports.GetScriptBreakpoints = GetScriptBreakpoints;
exports.SetScriptBreakpoints = SetScriptBreakpoints;
exports.GetScript = GetScript;
exports.GetTextMacros = GetTextMacros;
exports.SetFetchLimit = SetFetchLimit;
exports.DoSave = DoSave;
exports.GetTableData = GetTableData;
exports.GetAppLayout = GetAppLayout;
exports.SetAppProperties = SetAppProperties;
exports.GetAppProperties = GetAppProperties;
exports.GetLineage = GetLineage;
exports.CreateSessionObject = CreateSessionObject;
exports.DestroySessionObject = DestroySessionObject;
exports.CreateObject = CreateObject;
exports.DestroyObject = DestroyObject;
exports.GetObject = GetObject;
exports.GetObjects = GetObjects;
exports.GetBookmarks = GetBookmarks;
exports.CloneObject = CloneObject;
exports.CreateDraft = CreateDraft;
exports.CommitDraft = CommitDraft;
exports.DestroyDraft = DestroyDraft;
exports.Undo = Undo;
exports.Redo = Redo;
exports.ClearUndoBuffer = ClearUndoBuffer;
exports.CreateDimension = CreateDimension;
exports.DestroyDimension = DestroyDimension;
exports.GetDimension = GetDimension;
exports.CloneDimension = CloneDimension;
exports.CreateMeasure = CreateMeasure;
exports.DestroyMeasure = DestroyMeasure;
exports.GetMeasure = GetMeasure;
exports.CloneMeasure = CloneMeasure;
exports.CreateSessionVariable = CreateSessionVariable;
exports.DestroySessionVariable = DestroySessionVariable;
exports.CreateVariableEx = CreateVariableEx;
exports.DestroyVariableById = DestroyVariableById;
exports.DestroyVariableByName = DestroyVariableByName;
exports.GetVariableById = GetVariableById;
exports.GetVariableByName = GetVariableByName;
exports.CheckExpression = CheckExpression;
exports.CheckNumberOrExpression = CheckNumberOrExpression;
exports.AddAlternateState = AddAlternateState;
exports.RemoveAlternateState = RemoveAlternateState;
exports.CreateBookmark = CreateBookmark;
exports.DestroyBookmark = DestroyBookmark;
exports.GetBookmark = GetBookmark;
exports.ApplyBookmark = ApplyBookmark;
exports.CloneBookmark = CloneBookmark;
exports.AddFieldFromExpression = AddFieldFromExpression;
exports.GetFieldOnTheFlyByName = GetFieldOnTheFlyByName;
exports.GetAllInfos = GetAllInfos;
exports.Resume = Resume;
exports.AbortModal = AbortModal;
exports.Publish = Publish;
exports.GetMatchingFields = GetMatchingFields;
exports.FindMatchingFields = FindMatchingFields;
exports.Scramble = Scramble;
exports.SaveObjects = SaveObjects;
exports.GetAssociationScores = GetAssociationScores;
exports.GetMediaList = GetMediaList;
exports.GetContentLibraries = GetContentLibraries;
exports.GetLibraryContent = GetLibraryContent;
exports.DoReloadEx = DoReloadEx;
exports.BackCount = BackCount;
exports.ForwardCount = ForwardCount;
exports.GetSetAnalysis = GetSetAnalysis;
exports.SetScript = SetScript;
exports.CheckScriptSyntax = CheckScriptSyntax;
exports.GetFavoriteVariables = GetFavoriteVariables;
exports.SetFavoriteVariables = SetFavoriteVariables;
exports.GetIncludeFileContent = GetIncludeFileContent;
exports.CreateConnection = CreateConnection;
exports.ModifyConnection = ModifyConnection;
exports.DeleteConnection = DeleteConnection;
exports.GetConnection = GetConnection;
exports.GetConnections = GetConnections;
exports.GetDatabaseInfo = GetDatabaseInfo;
exports.GetDatabases = GetDatabases;
exports.GetDatabaseOwners = GetDatabaseOwners;
exports.GetDatabaseTables = GetDatabaseTables;
exports.GetDatabaseTableFields = GetDatabaseTableFields;
exports.GetDatabaseTablePreview = GetDatabaseTablePreview;
exports.GetFolderItemsForConnection = GetFolderItemsForConnection;
exports.GuessFileType = GuessFileType;
exports.GetFileTables = GetFileTables;
exports.GetFileTableFields = GetFileTableFields;
exports.GetFileTablePreview = GetFileTablePreview;
exports.GetFileTablesEx = GetFileTablesEx;
exports.SendGenericCommandToCustomConnector = SendGenericCommandToCustomConnector;
exports.SearchSuggest = SearchSuggest;
exports.SearchAssociations = SearchAssociations;
exports.SelectAssociations = SelectAssociations;
exports.SearchResults = SearchResults;
exports.SearchObjects = SearchObjects;
exports.GetScriptEx = GetScriptEx;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var UnApprove = "UnApprove";
var Approve = "Approve";
var UnPublish = "UnPublish";
var Publish = "Publish";
var GetLinkedObjects = "GetLinkedObjects";
var GetMeasure = "GetMeasure";
var GetInfo = "GetInfo";
var GetProperties = "GetProperties";
var SetProperties = "SetProperties";
var ApplyPatches = "ApplyPatches";
var GetLayout = "GetLayout";
exports.GetLayout = GetLayout;
exports.ApplyPatches = ApplyPatches;
exports.SetProperties = SetProperties;
exports.GetProperties = GetProperties;
exports.GetInfo = GetInfo;
exports.GetMeasure = GetMeasure;
exports.GetLinkedObjects = GetLinkedObjects;
exports.Publish = Publish;
exports.UnPublish = UnPublish;
exports.Approve = Approve;
exports.UnApprove = UnApprove;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var SetDualValue = "SetDualValue";
var SetNumValue = "SetNumValue";
var SetStringValue = "SetStringValue";
var GetInfo = "GetInfo";
var GetProperties = "GetProperties";
var SetProperties = "SetProperties";
var ApplyPatches = "ApplyPatches";
var GetLayout = "GetLayout";
exports.GetLayout = GetLayout;
exports.ApplyPatches = ApplyPatches;
exports.SetProperties = SetProperties;
exports.GetProperties = GetProperties;
exports.GetInfo = GetInfo;
exports.SetStringValue = SetStringValue;
exports.SetNumValue = SetNumValue;
exports.SetDualValue = SetDualValue;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var UnApprove = "UnApprove";
var Approve = "Approve";
var UnPublish = "UnPublish";
var Publish = "Publish";
var Apply = "Apply";
var GetInfo = "GetInfo";
var GetProperties = "GetProperties";
var SetProperties = "SetProperties";
var ApplyPatches = "ApplyPatches";
var GetLayout = "GetLayout";
var GetFieldValues = "GetFieldValues";
exports.GetFieldValues = GetFieldValues;
exports.GetLayout = GetLayout;
exports.ApplyPatches = ApplyPatches;
exports.SetProperties = SetProperties;
exports.GetProperties = GetProperties;
exports.GetInfo = GetInfo;
exports.Apply = Apply;
exports.Publish = Publish;
exports.UnPublish = UnPublish;
exports.Approve = Approve;
exports.UnApprove = UnApprove;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var UnApprove = "UnApprove";
var Approve = "Approve";
var UnPublish = "UnPublish";
var Publish = "Publish";
var GetLinkedObjects = "GetLinkedObjects";
var GetDimension = "GetDimension";
var GetInfo = "GetInfo";
var GetProperties = "GetProperties";
var SetProperties = "SetProperties";
var ApplyPatches = "ApplyPatches";
var GetLayout = "GetLayout";
exports.GetLayout = GetLayout;
exports.ApplyPatches = ApplyPatches;
exports.SetProperties = SetProperties;
exports.GetProperties = GetProperties;
exports.GetInfo = GetInfo;
exports.GetDimension = GetDimension;
exports.GetLinkedObjects = GetLinkedObjects;
exports.Publish = Publish;
exports.UnPublish = UnPublish;
exports.Approve = Approve;
exports.UnApprove = UnApprove;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var UnApprove = "UnApprove";
var Approve = "Approve";
var UnPublish = "UnPublish";
var Publish = "Publish";
var GetSnapshotObject = "GetSnapshotObject";
var EmbedSnapshotObject = "EmbedSnapshotObject";
var ResetMadeSelections = "ResetMadeSelections";
var EndSelections = "EndSelections";
var BeginSelections = "BeginSelections";
var CopyFrom = "CopyFrom";
var GetLinkedObjects = "GetLinkedObjects";
var SetChildArrayOrder = "SetChildArrayOrder";
var DestroyAllChildren = "DestroyAllChildren";
var DestroyChild = "DestroyChild";
var CreateChild = "CreateChild";
var GetChildInfos = "GetChildInfos";
var GetParent = "GetParent";
var GetChild = "GetChild";
var SelectHyperCubeContinuousRange = "SelectHyperCubeContinuousRange";
var MultiRangeSelectTreeDataValues = "MultiRangeSelectTreeDataValues";
var MultiRangeSelectHyperCubeValues = "MultiRangeSelectHyperCubeValues";
var RangeSelectHyperCubeValues = "RangeSelectHyperCubeValues";
var SelectPivotCells = "SelectPivotCells";
var SelectHyperCubeCells = "SelectHyperCubeCells";
var SelectHyperCubeValues = "SelectHyperCubeValues";
var Unlock = "Unlock";
var Lock = "Lock";
var DrillUp = "DrillUp";
var CollapseTop = "CollapseTop";
var CollapseLeft = "CollapseLeft";
var ExpandTop = "ExpandTop";
var ExpandLeft = "ExpandLeft";
var AcceptListObjectSearch = "AcceptListObjectSearch";
var AbortListObjectSearch = "AbortListObjectSearch";
var SearchListObjectFor = "SearchListObjectFor";
var SelectListObjectContinuousRange = "SelectListObjectContinuousRange";
var SelectListObjectAll = "SelectListObjectAll";
var SelectListObjectAlternative = "SelectListObjectAlternative";
var SelectListObjectExcluded = "SelectListObjectExcluded";
var SelectListObjectPossible = "SelectListObjectPossible";
var SelectListObjectValues = "SelectListObjectValues";
var ExportData = "ExportData";
var ClearSelections = "ClearSelections";
var GetInfo = "GetInfo";
var GetFullPropertyTree = "GetFullPropertyTree";
var SetFullPropertyTree = "SetFullPropertyTree";
var GetEffectiveProperties = "GetEffectiveProperties";
var GetProperties = "GetProperties";
var SetProperties = "SetProperties";
var ClearSoftPatches = "ClearSoftPatches";
var ApplyPatches = "ApplyPatches";
var GetHyperCubeBinnedData = "GetHyperCubeBinnedData";
var GetHyperCubeTreeData = "GetHyperCubeTreeData";
var GetHyperCubeContinuousData = "GetHyperCubeContinuousData";
var GetHyperCubeStackData = "GetHyperCubeStackData";
var GetHyperCubePivotData = "GetHyperCubePivotData";
var GetHyperCubeReducedData = "GetHyperCubeReducedData";
var GetHyperCubeData = "GetHyperCubeData";
var GetListObjectData = "GetListObjectData";
var GetLayout = "GetLayout";
exports.GetLayout = GetLayout;
exports.GetListObjectData = GetListObjectData;
exports.GetHyperCubeData = GetHyperCubeData;
exports.GetHyperCubeReducedData = GetHyperCubeReducedData;
exports.GetHyperCubePivotData = GetHyperCubePivotData;
exports.GetHyperCubeStackData = GetHyperCubeStackData;
exports.GetHyperCubeContinuousData = GetHyperCubeContinuousData;
exports.GetHyperCubeTreeData = GetHyperCubeTreeData;
exports.GetHyperCubeBinnedData = GetHyperCubeBinnedData;
exports.ApplyPatches = ApplyPatches;
exports.ClearSoftPatches = ClearSoftPatches;
exports.SetProperties = SetProperties;
exports.GetProperties = GetProperties;
exports.GetEffectiveProperties = GetEffectiveProperties;
exports.SetFullPropertyTree = SetFullPropertyTree;
exports.GetFullPropertyTree = GetFullPropertyTree;
exports.GetInfo = GetInfo;
exports.ClearSelections = ClearSelections;
exports.ExportData = ExportData;
exports.SelectListObjectValues = SelectListObjectValues;
exports.SelectListObjectPossible = SelectListObjectPossible;
exports.SelectListObjectExcluded = SelectListObjectExcluded;
exports.SelectListObjectAlternative = SelectListObjectAlternative;
exports.SelectListObjectAll = SelectListObjectAll;
exports.SelectListObjectContinuousRange = SelectListObjectContinuousRange;
exports.SearchListObjectFor = SearchListObjectFor;
exports.AbortListObjectSearch = AbortListObjectSearch;
exports.AcceptListObjectSearch = AcceptListObjectSearch;
exports.ExpandLeft = ExpandLeft;
exports.ExpandTop = ExpandTop;
exports.CollapseLeft = CollapseLeft;
exports.CollapseTop = CollapseTop;
exports.DrillUp = DrillUp;
exports.Lock = Lock;
exports.Unlock = Unlock;
exports.SelectHyperCubeValues = SelectHyperCubeValues;
exports.SelectHyperCubeCells = SelectHyperCubeCells;
exports.SelectPivotCells = SelectPivotCells;
exports.RangeSelectHyperCubeValues = RangeSelectHyperCubeValues;
exports.MultiRangeSelectHyperCubeValues = MultiRangeSelectHyperCubeValues;
exports.MultiRangeSelectTreeDataValues = MultiRangeSelectTreeDataValues;
exports.SelectHyperCubeContinuousRange = SelectHyperCubeContinuousRange;
exports.GetChild = GetChild;
exports.GetParent = GetParent;
exports.GetChildInfos = GetChildInfos;
exports.CreateChild = CreateChild;
exports.DestroyChild = DestroyChild;
exports.DestroyAllChildren = DestroyAllChildren;
exports.SetChildArrayOrder = SetChildArrayOrder;
exports.GetLinkedObjects = GetLinkedObjects;
exports.CopyFrom = CopyFrom;
exports.BeginSelections = BeginSelections;
exports.EndSelections = EndSelections;
exports.ResetMadeSelections = ResetMadeSelections;
exports.EmbedSnapshotObject = EmbedSnapshotObject;
exports.GetSnapshotObject = GetSnapshotObject;
exports.Publish = Publish;
exports.UnPublish = UnPublish;
exports.Approve = Approve;
exports.UnApprove = UnApprove;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var SetNxProperties = "SetNxProperties";
var GetNxProperties = "GetNxProperties";
var ForceContent = "ForceContent";
var SetContent = "SetContent";
var GetRawContent = "GetRawContent";
var GetContent = "GetContent";
exports.GetContent = GetContent;
exports.GetRawContent = GetRawContent;
exports.SetContent = SetContent;
exports.ForceContent = ForceContent;
exports.GetNxProperties = GetNxProperties;
exports.SetNxProperties = SetNxProperties;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var Clear = "Clear";
var LowLevelSelect = "LowLevelSelect";
var SelectAlternative = "SelectAlternative";
var SetAndMode = "SetAndMode";
var SetNxProperties = "SetNxProperties";
var GetNxProperties = "GetNxProperties";
var Unlock = "Unlock";
var Lock = "Lock";
var SelectAll = "SelectAll";
var SelectExcluded = "SelectExcluded";
var SelectPossible = "SelectPossible";
var ClearAllButThis = "ClearAllButThis";
var ToggleSelect = "ToggleSelect";
var Select = "Select";
var SelectValues = "SelectValues";
var GetAndMode = "GetAndMode";
var GetCardinal = "GetCardinal";
exports.GetCardinal = GetCardinal;
exports.GetAndMode = GetAndMode;
exports.SelectValues = SelectValues;
exports.Select = Select;
exports.ToggleSelect = ToggleSelect;
exports.ClearAllButThis = ClearAllButThis;
exports.SelectPossible = SelectPossible;
exports.SelectExcluded = SelectExcluded;
exports.SelectAll = SelectAll;
exports.Lock = Lock;
exports.Unlock = Unlock;
exports.GetNxProperties = GetNxProperties;
exports.SetNxProperties = SetNxProperties;
exports.SetAndMode = SetAndMode;
exports.SelectAlternative = SelectAlternative;
exports.LowLevelSelect = LowLevelSelect;
exports.Clear = Clear;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.suspendUntilCompleted = exports.invalidations = exports.qAskReplay = exports.qAsk = exports.connectSession = exports.Global = exports.Doc = exports.GenericMeasure = exports.GenericVariable = exports.GenericBookmark = exports.GenericDimension = exports.GenericObject = exports.Variable = exports.Field = undefined;

var _Field = __webpack_require__(57);

var Field = _interopRequireWildcard(_Field);

var _Variable = __webpack_require__(56);

var Variable = _interopRequireWildcard(_Variable);

var _GenericObject = __webpack_require__(55);

var GenericObject = _interopRequireWildcard(_GenericObject);

var _GenericDimension = __webpack_require__(54);

var GenericDimension = _interopRequireWildcard(_GenericDimension);

var _GenericBookmark = __webpack_require__(53);

var GenericBookmark = _interopRequireWildcard(_GenericBookmark);

var _GenericVariable = __webpack_require__(52);

var GenericVariable = _interopRequireWildcard(_GenericVariable);

var _GenericMeasure = __webpack_require__(51);

var GenericMeasure = _interopRequireWildcard(_GenericMeasure);

var _Doc = __webpack_require__(50);

var Doc = _interopRequireWildcard(_Doc);

var _Global = __webpack_require__(49);

var Global = _interopRequireWildcard(_Global);

var _connectSession = __webpack_require__(48);

var _connectSession2 = _interopRequireDefault(_connectSession);

var _qAsk = __webpack_require__(21);

var _qAsk2 = _interopRequireDefault(_qAsk);

var _qAskReplay = __webpack_require__(36);

var _qAskReplay2 = _interopRequireDefault(_qAskReplay);

var _invalidations = __webpack_require__(35);

var _invalidations2 = _interopRequireDefault(_invalidations);

var _suspendUntilCompleted = __webpack_require__(34);

var _suspendUntilCompleted2 = _interopRequireDefault(_suspendUntilCompleted);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

exports.Field = Field;
exports.Variable = Variable;
exports.GenericObject = GenericObject;
exports.GenericDimension = GenericDimension;
exports.GenericBookmark = GenericBookmark;
exports.GenericVariable = GenericVariable;
exports.GenericMeasure = GenericMeasure;
exports.Doc = Doc;
exports.Global = Global;
exports.connectSession = _connectSession2.default;
exports.qAsk = _qAsk2.default;
exports.qAskReplay = _qAskReplay2.default;
exports.invalidations = _invalidations2.default;
exports.suspendUntilCompleted = _suspendUntilCompleted2.default;

/***/ }),
/* 59 */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(14);
var TAG = __webpack_require__(5)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(60);
var test = {};
test[__webpack_require__(5)('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(17)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(12);
var createDesc = __webpack_require__(18);
var toIObject = __webpack_require__(4);
var toPrimitive = __webpack_require__(19);
var has = __webpack_require__(3);
var IE8_DOM_DEFINE = __webpack_require__(32);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(2) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(4);
var gOPN = __webpack_require__(24).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(0).document;
module.exports = document && document.documentElement;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(1);
var anObject = __webpack_require__(8);
var getKeys = __webpack_require__(15);

module.exports = __webpack_require__(2) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(8);
var dPs = __webpack_require__(65);
var enumBugKeys = __webpack_require__(13);
var IE_PROTO = __webpack_require__(26)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(31)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(64).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(14);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(27);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(27);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(4);
var toLength = __webpack_require__(69);
var toAbsoluteIndex = __webpack_require__(68);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 71 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(14);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(15);
var gOPS = __webpack_require__(25);
var pIE = __webpack_require__(12);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(0);
var core = __webpack_require__(9);
var LIBRARY = __webpack_require__(29);
var wksExt = __webpack_require__(30);
var defineProperty = __webpack_require__(1).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(1).f;
var has = __webpack_require__(3);
var TAG = __webpack_require__(5)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(6)('meta');
var isObject = __webpack_require__(7);
var has = __webpack_require__(3);
var setDesc = __webpack_require__(1).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(10)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 77 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(77);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(0);
var core = __webpack_require__(9);
var hide = __webpack_require__(20);
var redefine = __webpack_require__(17);
var ctx = __webpack_require__(78);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(0);
var has = __webpack_require__(3);
var DESCRIPTORS = __webpack_require__(2);
var $export = __webpack_require__(79);
var redefine = __webpack_require__(17);
var META = __webpack_require__(76).KEY;
var $fails = __webpack_require__(10);
var shared = __webpack_require__(16);
var setToStringTag = __webpack_require__(75);
var uid = __webpack_require__(6);
var wks = __webpack_require__(5);
var wksExt = __webpack_require__(30);
var wksDefine = __webpack_require__(74);
var enumKeys = __webpack_require__(73);
var isArray = __webpack_require__(67);
var anObject = __webpack_require__(8);
var isObject = __webpack_require__(7);
var toIObject = __webpack_require__(4);
var toPrimitive = __webpack_require__(19);
var createDesc = __webpack_require__(18);
var _create = __webpack_require__(66);
var gOPNExt = __webpack_require__(63);
var $GOPD = __webpack_require__(62);
var $DP = __webpack_require__(1);
var $keys = __webpack_require__(15);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(24).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(12).f = $propertyIsEnumerable;
  __webpack_require__(25).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(29)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(20)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(80);
__webpack_require__(61);
module.exports = __webpack_require__(9).Symbol;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(81);

__webpack_require__(59);

var _index = __webpack_require__(58);

var src = _interopRequireWildcard(_index);

var _package = __webpack_require__(33);

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// Observable Factories
// Polyfills
var baseObj = {
  version: _package2.default.version,
  qixVersion: _package2.default["qix-version"]
}; // polyfill symbol to enable iterators in IE
// import "core-js/fn/function/name"; // may be able to remove this with refactor


var RxQ = Object.assign(baseObj, src);

exports.default = RxQ;
module.exports = exports["default"];

/***/ })
/******/ ]);
});
//# sourceMappingURL=rxq.bundle.js.map